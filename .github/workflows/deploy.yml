name: Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  EKS_CLUSTER_NAME: music-cluster
  DEPLOYMENT_NAME: music-deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR file
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "새 이미지가 ECR에 푸시되었습니다: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"          

      - name: Update kubeconfig
        run: |
          echo "Current AWS region: ${{ secrets.AWS_REGION }}"
          echo "EKS cluster name: ${{ env.EKS_CLUSTER_NAME }}"
          
          # EKS 클러스터 목록 확인
          aws eks list-clusters --region ${{ secrets.AWS_REGION }}
          
          # kubeconfig 업데이트
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
          
          # kubectl 연결 테스트
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # 네임스페이스 생성
          kubectl apply -f k8s/namespace.yml
          
          # 이미지 URI 업데이트
          sed -i "s|YOUR_ECR_URI|$ECR_REGISTRY|g" k8s/deployment.yml
          sed -i "s|YOUR_ECR_REPOSITORY|$ECR_REPOSITORY|g" k8s/deployment.yml
          sed -i "s|:latest|:$IMAGE_TAG|g" k8s/deployment.yml
          
          # 쿠버네티스 리소스 적용
          kubectl apply -f k8s/deployment.yml
          
          # 배포 상태 확인
          kubectl rollout status deployment/$DEPLOYMENT_NAME -n music1-namespace

      - name: Verify deployment
        run: |
          kubectl get services -o wide -n music1-namespace
          kubectl get pods -l app=music1-app -n music1-namespace 